name: Python CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run pre-commit hooks
        run: pre-commit run -av

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies and pytest
        run: |
          python -m pip install --upgrade pip
          pip install .[full]
          pip install pytest

      - name: Run tests
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    container:
      image: docker:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install dependencies and build wheel
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-virtualenv
          python3 -m venv .venv
          source .venv/bin/activate
          pip install cibuildwheel
          cibuildwheel --output-dir dist

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheel-artifacts
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && secrets.TWINE_USERNAME && secrets.TWINE_PASSWORD && github.ref_type == 'tag'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Upload to PyPI
        run: twine upload dist/* --non-interactive --verbose
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
